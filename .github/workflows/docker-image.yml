name: Docker Image CI

on:
  push:
    branches: ['main']

env:
  NEXT_IMAGE_NAME: farm-contracts-nextjs
  PROJECT_NAME: farm-contracts

jobs:
  build-docker:
    runs-on: ubuntu-latest
    steps:
      - name: GitHub checkout
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      - name: Build image
        run: |
          docker buildx build -f Dockerfile.prod -t ghcr.io/${{ github.actor }}/${{ env.NEXT_IMAGE_NAME }} .
          docker push ghcr.io/${{ github.actor }}/${{ env.NEXT_IMAGE_NAME }}:latest

      - name: Copy docker-compose configuration to VPS
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.SSH_KEY }}
          source: 'docker-compose.prod.yml'
          target: /home/${{ github.actor }}/apps/${{ env.PROJECT_NAME }}

  deploy:
    needs: build-docker
    runs-on: ubuntu-latest
    steps:
      - name: SSH into server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd ~/apps/${{ env.PROJECT_NAME }}
            rm -f .env.production.local
            echo "APP_URL=${{ secrets.APP_URL }}" >> .env.production.local
            echo "AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }}" >> .env.production.local
            echo "AWS_BUCKET_NAME=${{ secrets.AWS_BUCKET_NAME }}" >> .env.production.local
            echo "AWS_BUCKET_REGION=${{ secrets.AWS_BUCKET_REGION }}" >> .env.production.local
            echo "AWS_SECRET_KEY=${{ secrets.AWS_SECRET_KEY }}" >> .env.production.local
            echo "DOMAIN_SENDER=${{ secrets.DOMAIN_SENDER }}" >> .env.production.local
            echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> .env.production.local
            echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> .env.production.local
            echo "GOOGLE_REDIRECT_URL=${{ secrets.GOOGLE_REDIRECT_URL }}" >> .env.production.local
            echo "MATBA_API_PASSWORD=${{ secrets.MATBA_API_PASSWORD }}" >> .env.production.local
            echo "MATBA_API_USER=${{ secrets.MATBA_API_USER }}" >> .env.production.local
            echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env.production.local
            echo "POSTGRES_HOSTADDR=${{ secrets.POSTGRES_HOSTADDR }}" >> .env.production.local
            echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env.production.local
            echo "POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}" >> .env.production.local
            echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env.production.local
            echo "RESEND_API_KEY=${{ secrets.RESEND_API_KEY }}" >> .env.production.local
            docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.REGISTRY_TOKEN }}
            docker pull ghcr.io/${{ github.actor }}/${{ env.NEXT_IMAGE_NAME }}:latest
            docker compose -f docker-compose.prod.yml up -d --remove-orphans
